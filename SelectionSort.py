#Сортировка выбором (Selection Sort) - это простой алгоритм сортировки, который на каждом шаге выбирает минимальный (или максимальный) 
#элемент из оставшихся и меняет его местами с первым элементом в неотсортированной части массива. Алгоритм продолжает это до тех пор, 
#пока весь массив не будет отсортирован. Временная сложность сортировки выбором составляет 
#O(n^2), 
#что делает его неэффективным для больших массивов, но он прост в реализации.
def selection_sort(arr):
    n = len(arr)

    for i in range(n - 1):
        # Находим индекс минимального элемента в оставшейся части массива
        min_index = i
        for j in range(i + 1, n):
            if arr[j] < arr[min_index]:
                min_index = j

        # Меняем местами найденный минимальный элемент с текущим элементом
        #Происходит множественное присваивание. Значения в правом кортеже копируются в соответствующие позиции в левом кортеже.
        arr[i], arr[min_index] = arr[min_index], arr[i]

# Пример использования
my_array = [578, 24765, 2345, 237642, 18741]
selection_sort(my_array)
print("Отсортированный массив:", my_array)


'''
my_tuple = (1, 2, 3)  # Используя круглые скобки
another_tuple = tuple([4, 5, 6])  # Преобразование списка в кортеж
mixed_tuple = ("apple", 3.14, True)

# Пустой кортеж
empty_tuple = ()

Основные свойства кортежей:

Неизменяемость (Immutable): Элементы кортежа не могут быть изменены после создания кортежа. Например, нельзя добавить, удалить или изменить элемент в кортеже.

Упорядоченность: Элементы кортежа располагаются в определенном порядке, который определяется при создании кортежа. Порядок элементов сохраняется при итерации по кортежу.

Могут содержать элементы различных типов: В кортеже можно хранить элементы различных типов данных, в том числе числа, строки, списки, другие кортежи и т.д.

Поддержка операций над последовательностями: Кортежи поддерживают множество операций, общих для последовательностей, таких как индексация, срезы и др.
'''