def bubble_sort(arr):
    n = len(arr)

    # Проходим по всем элементам массива
    for i in range(n):
        # Последние i элементов уже находятся на своих местах,
        # поэтому мы можем их игнорировать на каждом проходе
        for j in range(0, n - i - 1):
            # Сравниваем соседние элементы
            if arr[j] > arr[j + 1]:
                # Меняем местами элементы, если они находятся в неправильном порядке
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

# Пример использования
my_array = [64, 25, 12, 22, 11]
bubble_sort(my_array)
print("Отсортированный массив:", my_array)

'''
Объяснение шагов алгоритма:

1. Алгоритм начинает сравнивать первые два элемента массива и менять их местами, если необходимо.
2. Затем он двигается к следующей паре элементов и продолжает этот процесс до конца массива.
3. После первого прохода наибольший элемент перемещается в конец массива.
4. Процесс повторяется для оставшихся элементов, и каждый раз наименьший "всплывает" на своё место.
5. Алгоритм завершается, когда не происходит ни одной замены на проходе по всему массиву.

Важно отметить, что пузырьковая сортировка имеет квадратичную временную сложность (O(n^2)), что делает её неэффективной для больших массивов данных.
'''